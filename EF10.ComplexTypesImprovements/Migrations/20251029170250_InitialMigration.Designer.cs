// <auto-generated />
using System.Collections.Generic;
using EF10.ComplexTypesImprovements;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF10.ComplexTypesImprovements.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20251029170250_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "10.0.0-rc.2.25502.107")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF10.ComplexTypesImprovements.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty(typeof(Dictionary<string, object>), "BillingAddress", "EF10.ComplexTypesImprovements.Entities.Customer.BillingAddress#Address", b1 =>
                        {
                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.ComplexProperty(typeof(Dictionary<string, object>), "BusinessInfo", "EF10.ComplexTypesImprovements.Entities.Customer.BusinessInfo#BusinessInfo", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("CompanyName")
                                .IsRequired();

                            b1.Property<string>("Country")
                                .IsRequired();

                            b1.Property<string>("TaxId")
                                .IsRequired();

                            b1.ToJson("BusinessInfo");
                        });

                    b.ComplexProperty(typeof(Dictionary<string, object>), "ShippingAddress", "EF10.ComplexTypesImprovements.Entities.Customer.ShippingAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
